{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["quotesData","currentQuote","currentAuthor","App","getQuote","randomQuote","quotes","Math","floor","random","length","quote","author","$","attr","encodeURIComponent","animate","opacity","this","text","html","document","ready","ajax","headers","Accept","url","success","jsonQuotes","JSON","parse","console","log","then","on","id","className","title","target","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8IAOIA,E,8DAEAC,EAAe,GACjBC,EAAgB,GAiGHC,MA/Ff,WAwBE,SAASC,IACP,IAAIC,EANGL,EAAWM,OAChBC,KAAKC,MAAMD,KAAKE,SAAWT,EAAWM,OAAOI,SAO/CT,EAAeI,EAAYM,MAC3BT,EAAgBG,EAAYO,OAE5BC,IAAE,gBAAgBC,KAChB,OACA,8EACAC,mBAAmB,IAAMd,EAAe,KAAOC,IAGjDW,IAAE,iBAAiBC,KACjB,OACA,6FACAC,mBAAmBb,GACnB,YACAa,mBAAmBd,GACnB,wFAGFY,IAAE,eAAeG,QAAQ,CAAEC,QAAS,GAAK,KAAK,WAC5CJ,IAAEK,MAAMF,QAAQ,CAAEC,QAAS,GAAK,KAChCJ,IAAE,SAASM,KAAKd,EAAYM,UAG9BE,IAAE,iBAAiBG,QAAQ,CAAEC,QAAS,GAAK,KAAK,WAC9CJ,IAAEK,MAAMF,QAAQ,CAAEC,QAAS,GAAK,KAChCJ,IAAE,WAAWO,KAAKf,EAAYO,WAWlC,OAPAC,IAAEQ,UAAUC,OAAM,WAtDTT,IAAEU,KAAK,CACZC,QAAS,CACPC,OAAQ,oBAEVC,IACE,yIACFC,QAAS,SAAUC,GACS,kBAAfA,IACT5B,EAAa6B,KAAKC,MAAMF,GACxBG,QAAQC,IAAI,cACZD,QAAQC,IAAIhC,OA6CNiC,MAAK,WACf7B,OAGFS,IAAE,cAAcqB,GAAG,QAAS9B,MAG5B,sBAAK+B,GAAG,UAAR,UACE,sBAAKA,GAAG,YAAR,UACE,sBAAKC,UAAU,aAAf,UACE,mBAAGA,UAAU,mBAAb,eAAqC,sBAAMD,GAAG,YAEhD,sBAAKC,UAAU,eAAf,eAAgC,sBAAMD,GAAG,cACzC,sBAAKC,UAAU,UAAf,UACE,mBACEA,UAAU,SACVD,GAAG,cACHE,MAAM,oBACNC,OAAO,OAJT,SAME,mBAAGF,UAAU,oBAEf,mBACEA,UAAU,SACVD,GAAG,eACHE,MAAM,6BACNC,OAAO,SAJT,SAME,mBAAGF,UAAU,mBAEf,wBAAQA,UAAU,SAASD,GAAG,YAA9B,6BAGJ,sBAAKC,UAAU,SAAf,gBAA2B,mBAAGG,KAAK,uBAAR,gCCxFlBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BX,K","file":"static/js/main.14c267a4.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable max-len */\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport $ from 'jquery';\nimport './App.scss';\n\nlet quotesData: { quotes: string | any[]; };\n\nvar currentQuote = '',\n  currentAuthor = '';\n\nfunction App() {\n  function getQuotes() {\n    return $.ajax({\n      headers: {\n        Accept: 'application/json'\n      },\n      url:\n        'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json',\n      success: function (jsonQuotes) {\n        if (typeof jsonQuotes === 'string') {\n          quotesData = JSON.parse(jsonQuotes);\n          console.log('quotesData');\n          console.log(quotesData);\n        }\n      }\n    });\n  }\n\n  function getRandomQuote() {\n    return quotesData.quotes[\n      Math.floor(Math.random() * quotesData.quotes.length)\n    ];\n  }\n\n  function getQuote() {\n    let randomQuote = getRandomQuote();\n\n    currentQuote = randomQuote.quote;\n    currentAuthor = randomQuote.author;\n\n    $('#tweet-quote').attr(\n      'href',\n      'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' +\n      encodeURIComponent('\"' + currentQuote + '\" ' + currentAuthor)\n    );\n\n    $('#tumblr-quote').attr(\n      'href',\n      'https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=' +\n      encodeURIComponent(currentAuthor) +\n      '&content=' +\n      encodeURIComponent(currentQuote) +\n      '&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button'\n    );\n\n    $('.quote-text').animate({ opacity: 0 }, 500, function () {\n      $(this).animate({ opacity: 1 }, 500);\n      $('#text').text(randomQuote.quote);\n    });\n\n    $('.quote-author').animate({ opacity: 0 }, 500, function () {\n      $(this).animate({ opacity: 1 }, 500);\n      $('#author').html(randomQuote.author);\n    });\n  }\n\n  $(document).ready(function () {\n    getQuotes().then(() => {\n      getQuote();\n    });\n\n    $('#new-quote').on('click', getQuote);\n  });\n  return (\n    <div id=\"wrapper\">\n      <div id=\"quote-box\">\n        <div className=\"quote-text\">\n          <i className=\"fa fa-quote-left\"> </i><span id=\"text\"></span>\n        </div>\n        <div className=\"quote-author\">- <span id=\"author\"></span></div>\n        <div className=\"buttons\">\n          <a\n            className=\"button\"\n            id=\"tweet-quote\"\n            title=\"Tweet this quote!\"\n            target=\"_top\"\n          >\n            <i className=\"fa fa-twitter\"></i>\n          </a>\n          <a\n            className=\"button\"\n            id=\"tumblr-quote\"\n            title=\"Post this quote on tumblr!\"\n            target=\"_blank\"\n          >\n            <i className=\"fa fa-tumblr\"></i>\n          </a>\n          <button className=\"button\" id=\"new-quote\">New quote</button>\n        </div>\n      </div>\n      <div className=\"footer\">by <a href=\"https://monproweb.io\">Mon Pro Web</a></div>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}